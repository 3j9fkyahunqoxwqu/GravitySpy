#!/usr/bin/env python

import argparse

from matplotlib import use
use('agg')

import gravityspy.ML.train_classifier as train_classifier

# Definite Command line arguments here

def parse_commandline():
    """Parse the options given on the command-line.
    """
    parser = argparse.ArgumentParser()
    parser.add_argument("--path-to-trainingset",
                        help="folder where labeled images live", required=True)
    parser.add_argument("--path-to-pickle",
                        help="folder where the entire pickled training set "
                             "will live. This pickle file should be read in "
                             "by pandas", default='pickeleddata')
    parser.add_argument("--path-to-trained-model",
                        help="folder where the final trained model will go.")
    parser.add_argument("--batch-size", type=int, default=30,help="defines the batch size, 30 is a reasonable size")
    parser.add_argument("--nb-epoch", type=int, default=130,help="defines the number of iterations, 130 is reasonable. You can set it to 100 or below, if you have time concern for training.")
    parser.add_argument("--train-flag", type=int, default=0,help="a flag that shows all the golden set should be used for training the ML classifier, if 1, use training, validation and test set from golden set (ML experiments)")
    parser.add_argument("--number-of-classes", type=int, help="")
    parser.add_argument("--verbose", action="store_true", default=False,help="Run in Verbose Mode")
    args = parser.parse_args()


    return opts

# example script

#THEANO_FLAGS=mode=FAST_RUN,device=cuda,floatX=float32 trainmodel 
args = parse_commandline()
train_classifier.pickle_trainingset(path_to_trainingset, save_address=opts.path_to_pickle,
                       verbose=opts.verbouse)
train_classifier.make_model(data, model_folder='model', batch_size=22, nb_epoch=10,
               nb_classes=22, fraction_validation=.125, fraction_testing=None,
               best_model_based_validset=0, image_size=[140, 170],
               random_seed=1986, verbose=True)
